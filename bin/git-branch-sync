#!/bin/sh

#usage: git branch-sync [branch1] [branch2] [branch3] ...
#
# Force branches to point to their remote branches.

if [[ "$1" == "-h" ]]; then print-file-comments "$0"; exit; fi

# get current branch
# note: 'git symbolic-ref --short HEAD' throws when in 'detached HEAD' state
currBranch=$(git rev-parse --abbrev-ref HEAD)
# if no arg, bsync current branch
if [ -z "$1" ]; then
	set -- "$currBranch"
fi
for ((i=1;i<=$#;i++)); do
	branch=$(git rev-parse --abbrev-ref ${!i})
	remoteBranch=$(git rev-parse --abbrev-ref $branch@{u} 2>/dev/null)
	if [ -z $remoteBranch ]; then
		echo 1>&2 "fatal: no remote branch for branch $branch"
		continue
	fi
	if [ "$branch" = "$currBranch" ]; then
		# if current branch, then checkout -B as reset --hard will wipe
		# changes even if they could be applied on top of remote branch
		command=$(echo "git checkout -B $branch $remoteBranch")
		echo -e "${White}$command${None}"
		$command
	else
		# else force branch
		command=$(echo "git branch -f $branch $remoteBranch")
		echo -e "${White}$command${None}"
		$command
	fi
done
