#!/bin/sh

#usage:
#	jq [<commit>]
#	jq [<query>]
#
# Jira query.

if [[ "$1" == "-h" ]]; then print-file-comments "$0"; exit; fi

if [[ -z "$JiraUrl" ]]; then
	echo 1>&2 "fatal: JiraUrl not configured in work.bashrc"
	exit 1
fi

JiraUrlQuery="$JiraUrl/secure/QuickSearch.jspa?searchString="

# if not in git repo
if [[ $(git rev-parse --is-inside-work-tree 2>/dev/null) != "true" ]]; then
	if [ $# -eq 0 ]; then
		start chrome --new-window "$JiraUrl"
	else
		start chrome --new-window "$JiraUrlQuery$*"
	fi
	exit
fi
# if in git repo
if [ $# -eq 0 ] && [[ $(git cat-file -t HEAD 2>/dev/null) == "commit" ]]; then
	commit="HEAD"
elif [ $# -eq 1 ] && [[ $(git cat-file -t "$1" 2>/dev/null) == "commit" ]]; then
	commit="$1"
fi
if [ ! -z "$commit" ]; then
	# commit
	commit=$(git rev-parse --short "$commit")
	#	parse ticket(s) from commit message(s) and pass
	commits=($commit)
	# merge commit
	#	add parent commits also
	parents=$(git show -s --format="%p" $commit)
	if [ $(echo $parents | wc -w) -gt 1 ]; then
		echo "commit $commit is a merge commit, looking also at parents:"
		echo "$parents"
		for parent in $parents; do
			commits+=($parent)
		done
	fi
	# parse ticket(s) from commit(s)
	for commit in ${commits[@]}; do
		tickets+=$(git log -1 "$commit" --pretty=%s | grep -o -P '[A-Za-z]+[:-][\d]+')
		tickets+=" "
	done
	# remove trailing (and leading) whitespace
	tickets=$(echo $tickets | xargs)
	if [ -z "$tickets" ]; then
		# ticket(s) not present
		echo 1>&2 "fatal: no tickets found"
		exit 1
	fi
	# concatenate urls
	for ticket in $tickets; do
		query="$query$JiraUrlQuery$ticket "
	done
	start chrome --new-window $query
else
	# query
	#	pass all args
	start chrome --new-window "$JiraUrlQuery$*"
fi
