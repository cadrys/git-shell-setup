#!/bin/sh

#usage: retry
#           [(-r | --retry) <retry>]
#           [(-d | --delay) <delay>]
#           [(-q | --quiet)]
#           <command>
#
# Retry a command with exponential backoff delay (250 ms).

# +---+----------+--------------------+
# | i | delay@i  |        delay@i+1   |
# |---|----------|--------------------|
# | 0 |       0  |  250*(2^0)   250   |
# | 1 |     250  |  250*(2^1)   500   |
# | 2 |     500  |  250*(2^2)  1000   |
# | 3 |    1000  |  250*(2^3)  2000   |
# | 4 |    2000  |  250*(2^4)  4000   |
# | 5 |    4000  |  250*(2^5)  8000   |
# +---+----------+--------------------+

retry=5
delay=250 # msecs
while true; do
	case "$1" in
		-h ) print-file-comments "$0"; exit ;;
		-r | --retry )
			shift; retry="$1"; shift ;;
		-d | --delay )
			shift; delay="$1"; shift ;;
		-q | --quiet )
			quiet="true"; shift ;;
		*  ) break ;;
	esac
done

delaytotal=0			# secs
# widths for printf
delaywidth=$(wc -c <<< $(($delay * (2**$retry))))
delaywidth=$(($delaywidth>4?$delaywidth:4))
retrywidth=$(wc -c <<< $retry)
# retry
for iretry in $(seq 0 $retry); do
	if [ -z "$quiet" ]; then
		echo -e -n "${White}"
		printf "retry: %${retrywidth}s" $iretry
		printf ", delay %${delaywidth}s s" $delaytotal
		echo -e "${None}"
	fi
	# sec is the smallest denomination for sleep
	sleep "$delaytotal"s
	# run command
	eval "$@"
	# 250 * (2^iretry)
	msec=$(($delay * (2**$iretry)))
	# convert int to float
	sec=$(printf "%03d" "$msec" | sed -E 's,(...)$,.\1,')
	delaytotal="$sec"
done
